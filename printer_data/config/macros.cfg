#
###################################################################################
# Printing Macros
####################################################################################
##

####################
# Start of print Gcode
####################

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(55)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
    M117 Print Starting...
    #{if curr_bed_type=="Textured PEI Plate"}
    #SET_GCODE_OFFSET Z=-2.500
    #{else}
    #SET_GCODE_OFFSET Z=-2.500
    #{endif}
    G28 ;(Home X, Y & Z Axis)
    G90 ;Absolute positioning
    M220 S100 ;Reset Feedrate
    M221 S100 ;Reset Flowrate
    G92 E0 ;Reset Extruder

    G1 X0 Y0 F10000

    #setup skew correction
    #SKEW_PROFILE LOAD=my_skew_profile

    #Preheat nozzle and bed
    M140 S{BED_TEMP} ; Set Heat Bed temperature
    #M104 S{EXTRUDER_TEMP} T0; start warming extruder to preheat temp
    M190 S{BED_TEMP} ; Wait for Heat Bed temperature

    M117 Waiting for temperature

################## Homing ##################
    M117 Homing All...
    # Use absolute coordinates
    G90
    # Home the printer
    G28 ;Home

    #M117 Z-Tilt Adjust
    #Z_TILT_ADJUST

    M117 Generating mesh
    # Clear Previous mesh
    BED_MESH_CLEAR
    # Use the bed mesh
    BED_MESH_CALIBRATE
    #BED_MESH_PROFILE save=tmp
    BED_MESH_PROFILE LOAD=default

    #G1 X157 Y126 F10000
    G1 X0 Y0 F10000

    M117 Heaters Recovering...
    #Heat nozzle and bed

    M109 S{EXTRUDER_TEMP} T0; start warming extruder to preheat temp

################## Prime line ##################
    M117 Purging extruder...
    #PRIME_LINE
    #ZEROG_PURGE
    #CLEAN_AND_PURGE_NOZZLE

    M117 Printing.....
    UPDATE_DELAYED_GCODE ID=clear_display DURATION=10

####################
# End of print Gcode
####################

[gcode_macro END_PRINT]
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}

    SAVE_GCODE_STATE NAME=STATE_PRINT_END


    # Wait for buffer to clear
    M400
    G92 E0                         ; zero the extruder
    # move z up
    G91
    G1 E-0.7 Z+5 F3000
    G90                                      ; absolute positioning

    TURN_OFF_HEATERS

    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear

    #AFTER_PRINT_CLEAN_NOZZLE

    #G0 X{th.axis_maximum.x/2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear

    TURN_OFF_HEATERS

    M84 X Y E ;Disable motors

    # Clear Pressure Advance
    SET_PRESSURE_ADVANCE ADVANCE=0.0
    M117 Pressure Advance Set 0.0

    #Clear skew correction
    #SKEW_PROFILE CLEAR=my_skew_profile

    BED_MESH_CLEAR

    #Clear skew correction
    #SKEW_PROFILE CLEAR=my_skew_profile

    # Print Finished Message
    M117 Print Finished
    UPDATE_DELAYED_GCODE ID=clear_display DURATION=10

    RESTORE_GCODE_STATE NAME=STATE_PRINT_END


##################
# prime the nozzle
##################
#####################################################################
# Filament purge Definition - simple line
#####################################################################
[gcode_macro PRIME_LINE]
gcode: 
    M117 Prime Line
    G92 E0 ;Reset Extruder
    # move z axis 
    G1 Z2.0 F3000 ;Move Z Axis up
    # move to prime position 
    G1 X40 Y2 Z0.3 F5000.0 ;Move to start position
    G1 X120 Y2 Z0.3 F500.0 E15 ;Draw the first line
    G1 X120 Y2.3 Z0.3 F5000.0 ;Move to side a little
    G1 X40 Y2.3 Z0.3 F500.0 E30 ;Draw the second line
    G92 E0 ;Reset Extruder
    G1 Z2.0 F3000 ;Move Z Axis up

#####################################################################
# Nozzle Scrub Macro Definition
#####################################################################
#
#####################################################################
#   Nozzle Cleaner Quick
#####################################################################    
[gcode_macro CLEAN_NOZZLE]
variable_start_x: 63
variable_start_y: 387
variable_wipe_dist_y: -3
variable_wipe_qty: 5
variable_wipe_spd: 50
variable_end_loc_x: 189
variable_end_loc_y: 185

gcode:
    SAVE_GCODE_STATE NAME=STATE_PRINT_CURRENT

 {% if "xyz" not in printer.toolhead.homed_axes %}
   G28
 {% endif %}
 
   G90                                            ; absolute positioning
   M220 S100 ;Reset Feedrate
   M204 S100 ;Reset Acceleration
   M221 S100 ;Reset Flowrate

 ## Move nozzle to start position
   G1 X{start_x} Y{start_y} F6000

 ## Wipe nozzle
 {% for wipes in range(1, (wipe_qty + 1)) %}
   #WIPE LEFT
   G1 X{start_x + 10} Y{start_y - wipe_dist_y} F{wipe_spd * 300}
   G1 X{start_x + 10} Y{start_y + wipe_dist_y} F{wipe_spd * 300}
   G1 X{start_x + 10} Y{start_y - wipe_dist_y} F{wipe_spd * 300}
   G1 X{start_x + 10} Y{start_y + wipe_dist_y} F{wipe_spd * 300}
   G1 X{start_x + 10} Y{start_y - wipe_dist_y} F{wipe_spd * 300}
   #WIPE RIGHT
   G1 X{start_x - 10} Y{start_y + wipe_dist_y} F{wipe_spd * 300}
   G1 X{start_x - 10} Y{start_y - wipe_dist_y} F{wipe_spd * 300}
   G1 X{start_x - 10} Y{start_y + wipe_dist_y} F{wipe_spd * 300}
   G1 X{start_x - 10} Y{start_y - wipe_dist_y} F{wipe_spd * 300}
   G1 X{start_x - 10} Y{start_y + wipe_dist_y} F{wipe_spd * 300}
   
 {% endfor %}

 G1 X{end_loc_x} F10000

    RESTORE_GCODE_STATE NAME=STATE_PRINT_CURRENT

#####################################################################
#   Nozzle Clean AND Purge
##################################################################### 

[gcode_macro CLEAN_AND_PURGE_NOZZLE]
variable_start_x: 63
variable_start_y: 387
variable_start_z: 10
variable_wipe_dist_y: -3
variable_wipe_qty: 5
variable_wipe_spd: 50
variable_purge_loc_x: 100
variable_purge_loc_y: 392
variable_post_purge_y: 386
variable_end_loc_x: 189
variable_end_loc_y: 185

gcode:
 SAVE_GCODE_STATE NAME=STATE_PRINT_CURRENT

 {% if "xyz" not in printer.toolhead.homed_axes %}
   G28
 {% endif %}
 
   G90                                            ; absolute positioning
   #M220 S100 ;Reset Feedrate
   #M204 S100 ;Reset Acceleration
   #M221 S100 ;Reset Flowrate
 ## Move nozzle to start position
  #G1 Z{start_z} F1500
   G1 X{start_x} Y{start_y} F6000

 ## Wipe nozzle
 {% for wipes in range(1, (wipe_qty + 1)) %}
   #WIPE LEFT
   G1 X{start_x + 10} Y{start_y - wipe_dist_y} F{wipe_spd * 300}
   G1 X{start_x + 10} Y{start_y + wipe_dist_y} F{wipe_spd * 300}
   G1 X{start_x + 10} Y{start_y - wipe_dist_y} F{wipe_spd * 300}
   G1 X{start_x + 10} Y{start_y + wipe_dist_y} F{wipe_spd * 300}
   G1 X{start_x + 10} Y{start_y - wipe_dist_y} F{wipe_spd * 300}
   #WIPE RIGHT
   G1 X{start_x - 10} Y{start_y + wipe_dist_y} F{wipe_spd * 300}
   G1 X{start_x - 10} Y{start_y - wipe_dist_y} F{wipe_spd * 300}
   G1 X{start_x - 10} Y{start_y + wipe_dist_y} F{wipe_spd * 300}
   G1 X{start_x - 10} Y{start_y - wipe_dist_y} F{wipe_spd * 300}
   G1 X{start_x - 10} Y{start_y + wipe_dist_y} F{wipe_spd * 300}
   
 {% endfor %}

 G1 X{purge_loc_x}
 G1 Y{purge_loc_y}
 G92 E0
 G1 E30.0 F100
 G92 E0
 G1 E-0.5 F300
 #G1 Z{start_z}
 G1 Y{post_purge_y} F10000
 G1 X{start_x}
 G1 X{end_loc_x} F10000

    RESTORE_GCODE_STATE NAME=STATE_PRINT_CURRENT

#####################################################################
#   Nozzle Cleaner Quick - After Print
#####################################################################    
[gcode_macro AFTER_PRINT_CLEAN_NOZZLE]
variable_start_x: 63
variable_start_y: 387
variable_wipe_dist_y: -3
variable_wipe_qty: 5
variable_wipe_spd: 50

gcode:
    SAVE_GCODE_STATE NAME=STATE_PRINT_CURRENT

 {% if "xyz" not in printer.toolhead.homed_axes %}
   G28
 {% endif %}
 
   G90                                            ; absolute positioning
   #M220 S100 ;Reset Feedrate
   #M204 S100 ;Reset Acceleration
   #M221 S100 ;Reset Flowrate
 ## Move nozzle to start position
   G1 X{start_x} Y{start_y} F6000

 ## Wipe nozzle
 {% for wipes in range(1, (wipe_qty + 1)) %}
   #WIPE LEFT
   G1 X{start_x + 10} Y{start_y - wipe_dist_y} F{wipe_spd * 300}
   G1 X{start_x + 10} Y{start_y + wipe_dist_y} F{wipe_spd * 300}
   G1 X{start_x + 10} Y{start_y - wipe_dist_y} F{wipe_spd * 300}
   G1 X{start_x + 10} Y{start_y + wipe_dist_y} F{wipe_spd * 300}
   G1 X{start_x + 10} Y{start_y - wipe_dist_y} F{wipe_spd * 300}
   #WIPE RIGHT
   G1 X{start_x - 10} Y{start_y + wipe_dist_y} F{wipe_spd * 300}
   G1 X{start_x - 10} Y{start_y - wipe_dist_y} F{wipe_spd * 300}
   G1 X{start_x - 10} Y{start_y + wipe_dist_y} F{wipe_spd * 300}
   G1 X{start_x - 10} Y{start_y - wipe_dist_y} F{wipe_spd * 300}
   G1 X{start_x - 10} Y{start_y + wipe_dist_y} F{wipe_spd * 300}
   
 {% endfor %}

    RESTORE_GCODE_STATE NAME=STATE_PRINT_CURRENT

#####################################################################
#   OVERRIDES
#####################################################################

#####################################################################
#   Cancel print behaviour
#####################################################################
# [gcode_macro CANCEL_PRINT]
# description: Cancel the actual running print
# rename_existing: CANCEL_PRINT_BASE
# gcode:
#     # safe anti-stringing move coords
#     {% set th = printer.toolhead %}
#     {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
#     {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
#     {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}

#     G92 E0                         ; zero the extruder
#     G1 E-1 Z+5 F3000

#     G90                                      ; absolute positioning
#     # move z up
#     G0 Z{z_safe} F20000
#     G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
#     G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear

#     TURN_OFF_HEATERS

#     CANCEL_PRINT_BASE

#     # Clear Pressure Advance
#     SET_PRESSURE_ADVANCE ADVANCE=0.0
#     M117 Pressure Advance Set 0.0

#     #Clear skew correction
#     #SKEW_PROFILE CLEAR=my_skew_profile

#     BED_MESH_CLEAR

#     # Print Finished Message
#     M117 Print Cancelled


#####################################################################
# Start Macro Definition
#####################################################################
########################################
### Display                          ###
########################################

[delayed_gcode clear_display]
gcode:
    M117

########################################
### Calibration G-code Macro Buttons ###
########################################
##################
# Z Height
##################

[gcode_macro Probe_Z_Height]
gcode:
   G28

   PROBE_CALIBRATE

##################
# Bed Screw Adjust
##################

[gcode_macro automatic_bed_screw_adjust]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
      G28
    {% endif %}
    
    SCREWS_TILT_CALCULATE

###################
# Z Motor Alignment
###################

[gcode_macro z_motor_alignment]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
      G28
    {% endif %}
    
    Z_TILT_ADJUST

##################
# Z Accuracy
##################

[gcode_macro Z_Probe_Accuray]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
      G28
    {% endif %}

   PROBE_ACCURACY

##################
# Input Shaper
##################

[gcode_macro Accelerometer_Connection_Test]
gcode:
    ACCELEROMETER_QUERY


[gcode_macro X_Axis_Resonance_Test]
gcode:
 {% if "xyz" not in printer.toolhead.homed_axes %}
   G28
 {% endif %}

    TEST_RESONANCES AXIS=X


[gcode_macro Y_Axis_Resonance_Test]
gcode:
 {% if "xyz" not in printer.toolhead.homed_axes %}
   G28
 {% endif %}
   TEST_RESONANCES AXIS=Y

######################
# GitHub Config Backup
######################

[gcode_macro update_git]
gcode:
    RUN_SHELL_COMMAND CMD=update_git_script

[gcode_shell_command update_git_script]
command: bash /home/pi/printer_data/klipper-backup/script.sh
timeout: 90.0
verbose: True

######################
# BLTouch Tools
######################
#
# BLTouch commands: output_mode_store, pin_down, pin_up, reset, self_test, set_5V_output_mode, set_OD_output_mode, touch_mode
# Alternative: BLTOUCH_STORE MODE=5V, BLTOUCH_STORE MODE=OD
#
[gcode_macro BLTouch_Self_Test]
gcode:
    BLTOUCH_DEBUG COMMAND=self_test

[gcode_macro BLTouch_Pin_Down]
gcode:
    BLTOUCH_DEBUG COMMAND=pin_down

[gcode_macro BLTouch_Pin_Up]
gcode:
    BLTOUCH_DEBUG COMMAND=pin_up

[gcode_macro BLTouch_Activate_Touch_Mode]
gcode:
    BLTOUCH_DEBUG COMMAND=touch_mode

[gcode_macro BLTouch_Status]
gcode:
    QUERY_PROBE

[gcode_macro BLTouch_Reset]
gcode:
    BLTOUCH_DEBUG COMMAND=reset

####################################
# Acceleration and Speed Calibration
####################################
#
# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

[gcode_macro TEST_SPEED]
gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}

    {% for i in range(iterations) %}
        # Large pattern diagonals
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        
        # Large pattern box
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
    
        # Small pattern diagonals
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        
        # Small patternbox
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 

    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED